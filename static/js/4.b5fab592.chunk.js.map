{"version":3,"sources":["pages/ProductDetail.js"],"names":["StyledDiv","styled","div","StyledH4","h4","props","color","TabContent","useEffect","changeTabAim","tabState","className","StoredInfo","prodStored","useContext","prodStoredContext","productId","connect","state","store","reducer","alert_open","reducer2","history","useHistory","productNumber","useParams","product","productData","find","x","id","Number","useState","alertStat","changeAlertStat","changeTabState","tabAnim","addAmount","changeAddAmount","amountCount","type","amount","setAlertTimer","setTimeout","clearTimeout","style","display","src","imgsrc","alt","width","title","content","priceComma","price","placeholder","value","onChange","e","target","Append","variant","onClick","changProdStored","dispatch","payload","name","quan","push","goBack","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.b5fab592.chunk.js","sourcesContent":["\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button , Nav , InputGroup , FormControl} from 'react-bootstrap';\r\nimport { useHistory , useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n\r\nimport './ProductDetail.scss';\r\n\r\nimport { prodStoredContext , priceComma } from './Home';\r\nimport { connect } from 'react-redux';\r\n \r\nlet StyledDiv = styled.div `padding: 10px; `;\r\nlet StyledH4 = styled.h4 `\r\n        font-size: 20px; \r\n        color: ${props => props.color}\r\n        `;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Detail (props) {\r\n  \r\n  let history = useHistory();\r\n\r\n  let { productNumber } = useParams();\r\n\r\n  let product = props.productData.find(x => x.id === Number(productNumber));\r\n \r\n  let [alertStat,changeAlertStat] = useState(true);\r\n\r\n\r\n  let [tabState,changeTabState] = useState(0);\r\n  let [tabAnim, changeTabAim] = useState(false);\r\n\r\n  let [addAmount,changeAddAmount] = useState(1);\r\n\r\n\r\n  function amountCount(type){\r\n      var amount = addAmount;\r\n    if(type === 'add'){\r\n     \r\n      amount = Number(amount)+1;              \r\n      return changeAddAmount( amount ) ;   \r\n    }else{\r\n               \r\n      if(amount === 0){\r\n        return \r\n      }\r\n      amount = Number(amount)-1;      \r\n      return changeAddAmount( amount) ; \r\n    }\r\n\r\n  }\r\n\r\n\r\n  //마운트 \r\n  useEffect( () => {\r\n   let setAlertTimer = setTimeout(()=>{\r\n      changeAlertStat(false);\r\n       //언마운트  \r\n       return() => { clearTimeout(setAlertTimer) }\r\n    } , 2000);\r\n  } , [alertStat] );\r\n\r\n\r\n\r\n  return(\r\n\r\n    <div className=\"container\">\r\n        <StyledDiv>\r\n          <StyledH4 className=\"red\" >\r\n            상품안내\r\n            <hr/>\r\n          </StyledH4>\r\n        </StyledDiv>\r\n      <div className=\"product-alert\" id=\"product-alert\"  style={{display: `${alertStat?  \"\" : \"none\"}` }}>\r\n        <p>재고가 얼마남지 않았습니다.</p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md6  mx-auto\" >\r\n          <img src={props.productData[product.id].imgsrc} alt=\"\"  width=\"100%\"/>\r\n        </div>\r\n        <div className=\"col-md6 mt-4 mx-auto\" >\r\n          <h4 className=\"pt-5\">\r\n            {props.productData[product.id].title}\r\n          </h4>\r\n          <p>{props.productData[product.id].content}</p>\r\n          <p> { priceComma(props.productData[product.id].price, 3)}  원 </p>\r\n\r\n          <StoredInfo  productId={product.id} />\r\n\r\n        \r\n              <div className=\"input-group mx-auto\" style={{width:\"50%\"}}>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"수량\" value={addAmount}  onChange={(e)=>{\r\n                  if(e.target.value >= 0 ){\r\n                    return  changeAddAmount(e.target.value);\r\n                  }else{\r\n                    return  changeAddAmount(addAmount);\r\n                  }\r\n                  \r\n                }}/>\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-secondary\" onClick={() => {   \r\n                    amountCount('add');\r\n                    }}>+</Button>\r\n                  <Button variant=\"outline-secondary\"  onClick={() => { \r\n                    amountCount('minus');\r\n                  }}>-</Button>\r\n                </InputGroup.Append>\r\n              </div>\r\n            \r\n\r\n          <hr/>\r\n          <button className=\"btn btn-danger\" onClick={ () => { \r\n            props.changProdStored([8,8,8]);\r\n            props.dispatch({type:'addCart' , payload: { id: product.id  , name: props.productData[product.id].title , quan: addAmount } });\r\n            history.push('/cart');\r\n            } }  >주문하기</button>{' '}\r\n          <Button variant=\"primary\" onClick={ () => {history.push('/cart')} } > 장바구니 </Button>{' '}\r\n          <Button variant=\"primary\" onClick={ () => {history.goBack()} } > 뒤로가기 </Button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* tab  */}\r\n      <Nav className=\"mt-5\"  variant=\"tabs\"  defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{ changeTabAim(false); changeTabState(0)}}  > 상품 설명</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{ changeTabAim(false); changeTabState(1)}}> 후기 </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={tabAnim} classNames=\"wow\" timeout={500}>\r\n        <TabContent tabState={tabState} changeTabAim={changeTabAim}/>  \r\n      </CSSTransition>\r\n        \r\n\r\n\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n//redux\r\nfunction DetailConn(state) {\r\n  return{\r\n      store  : state.reducer ,\r\n      alert_open : state.reducer2\r\n  }\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n  useEffect( () => {\r\n    props.changeTabAim(true);\r\n  })\r\n\r\n  switch(props.tabState){\r\n    case 0 :\r\n      return <div className=\"tabDiv\">aaa</div>\r\n    case 1 :\r\n      return <div className=\"tabDiv\" >bbb</div>\r\n    default :\r\n      return\r\n  }\r\n  // if(props.tabState === 0){\r\n  //   return (\r\n  //     <div className=\"tabDiv\">aaa</div>\r\n  //   )\r\n  // }else if(props.tabState === 1){\r\n  //   return (\r\n  //     <div className=\"tabDiv\" >bbb</div>\r\n  //   )\r\n  // }else if(props.tabState === 2){\r\n  //   return (\r\n  //     <div className=\"tabDiv\" >ccc</div>\r\n  //   )\r\n  // }\r\n}\r\n\r\n\r\nfunction StoredInfo(props) {\r\n\r\n  let prodStored = useContext(prodStoredContext);\r\n\r\n  return (\r\n    <p>재고: {prodStored[props.productId]}</p>\r\n  ) \r\n\r\n}\r\n\r\n\r\nexport default connect(DetailConn)(Detail);"],"sourceRoot":""}